server:
  port: ${PORT:0}

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8010/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}

spring:
  application:
    name:
      TOURIST-MANAGEMENT-QUERY
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:postgresql://localhost:5432/tourist_management?createDatabaseIfNotExist=true
    username: user
    password: password
  kafka:
    listener:
      ack-mode: MANUAL_IMMEDIATE
    consumer:
      bootstrap-servers: localhost:9092
      group-id: touristManagementConsumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE